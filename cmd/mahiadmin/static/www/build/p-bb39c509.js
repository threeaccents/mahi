const t=t=>/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/.test(String(t).toLowerCase()),a=t=>t.split(" ").length>1&&/^[a-zA-Z\s]*$/.test(t),e=()=>JSON.parse(localStorage.getItem("me")),s=t=>Math.floor(Math.random()*Math.floor(t)),r=t=>{if(!t)return"";let a=Object.keys(t).filter(a=>t[a]&&""!==t[a]).map(a=>a+"="+t[a]).join("&");return a=a&&""!==a?`${a}&`:a,a="&"==a[a.length-1]?a.substring(0,a.length-1):a,"?"+a},n=t=>o(t/1e9),o=t=>Math.round(100*t)/100,c=(t,a)=>t.length<=a?t:`${t.substr(0,a-3)}...`,u=(t,a=2)=>{if(0===t)return"0 Bytes";const e=a<0?0:a,s=Math.floor(Math.log(t)/Math.log(1024));return parseFloat((t/Math.pow(1024,s)).toFixed(e))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][s]},B=(t,a)=>{var e;return function(){const s=arguments,r=()=>{e=null,t.apply(this,s)};clearTimeout(e),e=setTimeout(r,a)}},h=t=>{const a=document.createElement("textarea");a.value=t,document.body.appendChild(a),a.select(),document.execCommand("copy"),document.body.removeChild(a)};export{t as a,n as b,h as c,B as d,u as f,r as g,a as i,c as l,e as m,s as r}