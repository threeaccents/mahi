/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ApplicationModel, StorageEngineType, } from "./models/application";
import { MatchResults, RouterHistory, } from "@stencil/router";
import { TaAvatarColors, TaAvatarSize, } from "./components/elements/ta-avatar/ta-avatar";
import { TaAvatarSize as TaAvatarSize1, } from "./components/elements/ta-avatar/ta-avatar";
import { CardModel, } from "./models/billing";
import { TaButtonType, } from "./components/elements/ta-button/ta-button";
import { PreviewFile, } from "./components/containers/ta-dragger/interface";
import { FileModel, } from "./models/file";
import { TaIconType, } from "./components/elements/ta-icon/ta-icon";
import { InputType, } from "./components/elements/ta-input/ta-input";
import { TaLineGraphDataSet, } from "./components/elements/ta-line-graph/interface";
import { TaMultiSelectOption, } from "./components/elements/ta-multi-select/interface";
import { TaSidebarItemIcon, } from "./components/containers/ta-sidebar/ta-sidebar-item/ta-sidebar-item";
import { TaIconType as TaIconType1, } from "./components/elements/ta-icon/ta-icon";
import { UserModel, } from "./models/user";
export namespace Components {
    interface AppRoot {
    }
    interface ApplicationDetailsSidebar {
        "application": ApplicationModel;
    }
    interface ApplicationDetailsView {
        "history": RouterHistory;
        "match": MatchResults;
    }
    interface ApplicationsView {
        "history": RouterHistory;
    }
    interface AuthView {
        "history": RouterHistory;
    }
    interface BillingSettingView {
    }
    interface CreateApplicationView {
        "history": RouterHistory;
    }
    interface CreateUserView {
        "history": RouterHistory;
    }
    interface CustomStorageEngineInput {
        "exceptions": StorageEngineType[];
        "value": StorageEngineType;
    }
    interface DashboardView {
    }
    interface EditApplicationView {
        "history": RouterHistory;
    }
    interface EditUserView {
        "history": RouterHistory;
    }
    interface ForgotPasswordView {
    }
    interface LoginTab {
        "history": RouterHistory;
    }
    interface OnboardingCongratulationsView {
        "history": RouterHistory;
    }
    interface OnboardingContainer {
    }
    interface OnboardingCustomStorageView {
        "history": RouterHistory;
    }
    interface OnboardingLeftSide {
        "lastStep": boolean;
        "mainTitle": string;
        "subTitle": string;
    }
    interface OnboardingRightSide {
        "description": string;
        "mainTitle": string;
    }
    interface OnboardingSelectStorageView {
        "history": RouterHistory;
    }
    interface PersonalSettingView {
    }
    interface RegisterTab {
        "history": RouterHistory;
    }
    interface ResetPasswordView {
        "history": RouterHistory;
    }
    interface SettingsView {
        "history": RouterHistory;
    }
    interface SpaceSettingView {
    }
    interface TaAppLayout {
    }
    interface TaAppPage {
    }
    interface TaApplicationCard {
        "application": ApplicationModel;
        "create": boolean;
        "history": RouterHistory;
    }
    interface TaApplicationListCard {
        "application": ApplicationModel;
        "create": boolean;
        "history": RouterHistory;
    }
    interface TaAvatar {
        "color": TaAvatarColors;
        "size": TaAvatarSize;
        "text": string;
    }
    interface TaAvatarList {
        "items": string[];
        "size": TaAvatarSize;
    }
    interface TaBillingCard {
        "card": CardModel;
    }
    interface TaButton {
        "color": "white" | "grey" | "dark-grey";
        "disabled": boolean;
        "loading": boolean;
        "small": boolean;
        "type": TaButtonType;
    }
    interface TaCard {
    }
    interface TaCheckbox {
        "initialChecked": boolean;
        "label": string;
    }
    interface TaDragger {
        "applicationId": string;
    }
    interface TaDraggerPreviewFile {
        "file": PreviewFile;
    }
    interface TaDrawer {
        "open": boolean;
    }
    interface TaDrawers {
        "history": RouterHistory;
        "routeId": number;
    }
    interface TaDropdown {
        "close": () => Promise<void>;
        "overlay": HTMLElement;
    }
    interface TaError {
        "error": string;
    }
    interface TaFileCard {
        "file": FileModel;
    }
    interface TaForm {
    }
    interface TaFormLabel {
    }
    interface TaIcon {
        "icon": TaIconType;
    }
    interface TaInput {
        "disabled": boolean;
        "error": string;
        "label": string;
        "loading": boolean;
        "type": InputType;
        "value": string;
    }
    interface TaLineGraph {
        "datasets": TaLineGraphDataSet[];
        "labels": string[];
    }
    interface TaLoader {
    }
    interface TaModal {
        "bodyText": string;
        "cancelBtnText": string;
        "confirmBtnText": string;
        "display": boolean;
        "loading": boolean;
        "titleText": string;
        "useDefaultFooter": boolean;
    }
    interface TaMultiSelect {
        "label": string;
        "loading": boolean;
        "options": TaMultiSelectOption[];
        "value": string[];
    }
    interface TaNavDrawer {
        "open": boolean;
    }
    interface TaPageHeader {
        "pageTitle": string;
    }
    interface TaProgress {
        "size": number;
        "value": number;
    }
    interface TaRecentApplicationsList {
    }
    interface TaSelect {
        "error": string;
        "placeholder": string;
        "value": string | number;
    }
    interface TaSelectOption {
        "deselect": () => Promise<void>;
        "label": string;
        "select": () => Promise<void>;
        "value": string | number;
    }
    interface TaSidebar {
        "history": RouterHistory;
    }
    interface TaSidebarItem {
        "icon": TaSidebarItemIcon;
        "to": string;
    }
    interface TaStatCard {
        "icon": TaIconType;
        "label": string;
        "value": string;
    }
    interface TaSwitchButton {
        "initialChecked": boolean;
        "label": string;
        "noLabel": string;
        "yesLabel": string;
    }
    interface TaTabBody {
        "activate": () => Promise<void>;
        "deactivate": () => Promise<void>;
        "tab": string;
    }
    interface TaTabHeader {
        "activate": () => Promise<void>;
        "deactivate": () => Promise<void>;
        "tab": string;
    }
    interface TaTabHeaderBar {
    }
    interface TaTabs {
        "initialValue": string;
    }
    interface TaTextarea {
        "error": string;
        "label": string;
        "rows": number;
        "value": string;
    }
    interface TaTooltip {
        "text": string;
    }
    interface TaTopbar {
    }
    interface TaUserCard {
        "create": boolean;
        "history": RouterHistory;
        "user": UserModel;
    }
    interface TaUserListCard {
        "create": boolean;
        "history": RouterHistory;
        "user": UserModel;
    }
    interface UsersView {
        "history": RouterHistory;
    }
}
declare global {
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLApplicationDetailsSidebarElement extends Components.ApplicationDetailsSidebar, HTMLStencilElement {
    }
    var HTMLApplicationDetailsSidebarElement: {
        prototype: HTMLApplicationDetailsSidebarElement;
        new (): HTMLApplicationDetailsSidebarElement;
    };
    interface HTMLApplicationDetailsViewElement extends Components.ApplicationDetailsView, HTMLStencilElement {
    }
    var HTMLApplicationDetailsViewElement: {
        prototype: HTMLApplicationDetailsViewElement;
        new (): HTMLApplicationDetailsViewElement;
    };
    interface HTMLApplicationsViewElement extends Components.ApplicationsView, HTMLStencilElement {
    }
    var HTMLApplicationsViewElement: {
        prototype: HTMLApplicationsViewElement;
        new (): HTMLApplicationsViewElement;
    };
    interface HTMLAuthViewElement extends Components.AuthView, HTMLStencilElement {
    }
    var HTMLAuthViewElement: {
        prototype: HTMLAuthViewElement;
        new (): HTMLAuthViewElement;
    };
    interface HTMLBillingSettingViewElement extends Components.BillingSettingView, HTMLStencilElement {
    }
    var HTMLBillingSettingViewElement: {
        prototype: HTMLBillingSettingViewElement;
        new (): HTMLBillingSettingViewElement;
    };
    interface HTMLCreateApplicationViewElement extends Components.CreateApplicationView, HTMLStencilElement {
    }
    var HTMLCreateApplicationViewElement: {
        prototype: HTMLCreateApplicationViewElement;
        new (): HTMLCreateApplicationViewElement;
    };
    interface HTMLCreateUserViewElement extends Components.CreateUserView, HTMLStencilElement {
    }
    var HTMLCreateUserViewElement: {
        prototype: HTMLCreateUserViewElement;
        new (): HTMLCreateUserViewElement;
    };
    interface HTMLCustomStorageEngineInputElement extends Components.CustomStorageEngineInput, HTMLStencilElement {
    }
    var HTMLCustomStorageEngineInputElement: {
        prototype: HTMLCustomStorageEngineInputElement;
        new (): HTMLCustomStorageEngineInputElement;
    };
    interface HTMLDashboardViewElement extends Components.DashboardView, HTMLStencilElement {
    }
    var HTMLDashboardViewElement: {
        prototype: HTMLDashboardViewElement;
        new (): HTMLDashboardViewElement;
    };
    interface HTMLEditApplicationViewElement extends Components.EditApplicationView, HTMLStencilElement {
    }
    var HTMLEditApplicationViewElement: {
        prototype: HTMLEditApplicationViewElement;
        new (): HTMLEditApplicationViewElement;
    };
    interface HTMLEditUserViewElement extends Components.EditUserView, HTMLStencilElement {
    }
    var HTMLEditUserViewElement: {
        prototype: HTMLEditUserViewElement;
        new (): HTMLEditUserViewElement;
    };
    interface HTMLForgotPasswordViewElement extends Components.ForgotPasswordView, HTMLStencilElement {
    }
    var HTMLForgotPasswordViewElement: {
        prototype: HTMLForgotPasswordViewElement;
        new (): HTMLForgotPasswordViewElement;
    };
    interface HTMLLoginTabElement extends Components.LoginTab, HTMLStencilElement {
    }
    var HTMLLoginTabElement: {
        prototype: HTMLLoginTabElement;
        new (): HTMLLoginTabElement;
    };
    interface HTMLOnboardingCongratulationsViewElement extends Components.OnboardingCongratulationsView, HTMLStencilElement {
    }
    var HTMLOnboardingCongratulationsViewElement: {
        prototype: HTMLOnboardingCongratulationsViewElement;
        new (): HTMLOnboardingCongratulationsViewElement;
    };
    interface HTMLOnboardingContainerElement extends Components.OnboardingContainer, HTMLStencilElement {
    }
    var HTMLOnboardingContainerElement: {
        prototype: HTMLOnboardingContainerElement;
        new (): HTMLOnboardingContainerElement;
    };
    interface HTMLOnboardingCustomStorageViewElement extends Components.OnboardingCustomStorageView, HTMLStencilElement {
    }
    var HTMLOnboardingCustomStorageViewElement: {
        prototype: HTMLOnboardingCustomStorageViewElement;
        new (): HTMLOnboardingCustomStorageViewElement;
    };
    interface HTMLOnboardingLeftSideElement extends Components.OnboardingLeftSide, HTMLStencilElement {
    }
    var HTMLOnboardingLeftSideElement: {
        prototype: HTMLOnboardingLeftSideElement;
        new (): HTMLOnboardingLeftSideElement;
    };
    interface HTMLOnboardingRightSideElement extends Components.OnboardingRightSide, HTMLStencilElement {
    }
    var HTMLOnboardingRightSideElement: {
        prototype: HTMLOnboardingRightSideElement;
        new (): HTMLOnboardingRightSideElement;
    };
    interface HTMLOnboardingSelectStorageViewElement extends Components.OnboardingSelectStorageView, HTMLStencilElement {
    }
    var HTMLOnboardingSelectStorageViewElement: {
        prototype: HTMLOnboardingSelectStorageViewElement;
        new (): HTMLOnboardingSelectStorageViewElement;
    };
    interface HTMLPersonalSettingViewElement extends Components.PersonalSettingView, HTMLStencilElement {
    }
    var HTMLPersonalSettingViewElement: {
        prototype: HTMLPersonalSettingViewElement;
        new (): HTMLPersonalSettingViewElement;
    };
    interface HTMLRegisterTabElement extends Components.RegisterTab, HTMLStencilElement {
    }
    var HTMLRegisterTabElement: {
        prototype: HTMLRegisterTabElement;
        new (): HTMLRegisterTabElement;
    };
    interface HTMLResetPasswordViewElement extends Components.ResetPasswordView, HTMLStencilElement {
    }
    var HTMLResetPasswordViewElement: {
        prototype: HTMLResetPasswordViewElement;
        new (): HTMLResetPasswordViewElement;
    };
    interface HTMLSettingsViewElement extends Components.SettingsView, HTMLStencilElement {
    }
    var HTMLSettingsViewElement: {
        prototype: HTMLSettingsViewElement;
        new (): HTMLSettingsViewElement;
    };
    interface HTMLSpaceSettingViewElement extends Components.SpaceSettingView, HTMLStencilElement {
    }
    var HTMLSpaceSettingViewElement: {
        prototype: HTMLSpaceSettingViewElement;
        new (): HTMLSpaceSettingViewElement;
    };
    interface HTMLTaAppLayoutElement extends Components.TaAppLayout, HTMLStencilElement {
    }
    var HTMLTaAppLayoutElement: {
        prototype: HTMLTaAppLayoutElement;
        new (): HTMLTaAppLayoutElement;
    };
    interface HTMLTaAppPageElement extends Components.TaAppPage, HTMLStencilElement {
    }
    var HTMLTaAppPageElement: {
        prototype: HTMLTaAppPageElement;
        new (): HTMLTaAppPageElement;
    };
    interface HTMLTaApplicationCardElement extends Components.TaApplicationCard, HTMLStencilElement {
    }
    var HTMLTaApplicationCardElement: {
        prototype: HTMLTaApplicationCardElement;
        new (): HTMLTaApplicationCardElement;
    };
    interface HTMLTaApplicationListCardElement extends Components.TaApplicationListCard, HTMLStencilElement {
    }
    var HTMLTaApplicationListCardElement: {
        prototype: HTMLTaApplicationListCardElement;
        new (): HTMLTaApplicationListCardElement;
    };
    interface HTMLTaAvatarElement extends Components.TaAvatar, HTMLStencilElement {
    }
    var HTMLTaAvatarElement: {
        prototype: HTMLTaAvatarElement;
        new (): HTMLTaAvatarElement;
    };
    interface HTMLTaAvatarListElement extends Components.TaAvatarList, HTMLStencilElement {
    }
    var HTMLTaAvatarListElement: {
        prototype: HTMLTaAvatarListElement;
        new (): HTMLTaAvatarListElement;
    };
    interface HTMLTaBillingCardElement extends Components.TaBillingCard, HTMLStencilElement {
    }
    var HTMLTaBillingCardElement: {
        prototype: HTMLTaBillingCardElement;
        new (): HTMLTaBillingCardElement;
    };
    interface HTMLTaButtonElement extends Components.TaButton, HTMLStencilElement {
    }
    var HTMLTaButtonElement: {
        prototype: HTMLTaButtonElement;
        new (): HTMLTaButtonElement;
    };
    interface HTMLTaCardElement extends Components.TaCard, HTMLStencilElement {
    }
    var HTMLTaCardElement: {
        prototype: HTMLTaCardElement;
        new (): HTMLTaCardElement;
    };
    interface HTMLTaCheckboxElement extends Components.TaCheckbox, HTMLStencilElement {
    }
    var HTMLTaCheckboxElement: {
        prototype: HTMLTaCheckboxElement;
        new (): HTMLTaCheckboxElement;
    };
    interface HTMLTaDraggerElement extends Components.TaDragger, HTMLStencilElement {
    }
    var HTMLTaDraggerElement: {
        prototype: HTMLTaDraggerElement;
        new (): HTMLTaDraggerElement;
    };
    interface HTMLTaDraggerPreviewFileElement extends Components.TaDraggerPreviewFile, HTMLStencilElement {
    }
    var HTMLTaDraggerPreviewFileElement: {
        prototype: HTMLTaDraggerPreviewFileElement;
        new (): HTMLTaDraggerPreviewFileElement;
    };
    interface HTMLTaDrawerElement extends Components.TaDrawer, HTMLStencilElement {
    }
    var HTMLTaDrawerElement: {
        prototype: HTMLTaDrawerElement;
        new (): HTMLTaDrawerElement;
    };
    interface HTMLTaDrawersElement extends Components.TaDrawers, HTMLStencilElement {
    }
    var HTMLTaDrawersElement: {
        prototype: HTMLTaDrawersElement;
        new (): HTMLTaDrawersElement;
    };
    interface HTMLTaDropdownElement extends Components.TaDropdown, HTMLStencilElement {
    }
    var HTMLTaDropdownElement: {
        prototype: HTMLTaDropdownElement;
        new (): HTMLTaDropdownElement;
    };
    interface HTMLTaErrorElement extends Components.TaError, HTMLStencilElement {
    }
    var HTMLTaErrorElement: {
        prototype: HTMLTaErrorElement;
        new (): HTMLTaErrorElement;
    };
    interface HTMLTaFileCardElement extends Components.TaFileCard, HTMLStencilElement {
    }
    var HTMLTaFileCardElement: {
        prototype: HTMLTaFileCardElement;
        new (): HTMLTaFileCardElement;
    };
    interface HTMLTaFormElement extends Components.TaForm, HTMLStencilElement {
    }
    var HTMLTaFormElement: {
        prototype: HTMLTaFormElement;
        new (): HTMLTaFormElement;
    };
    interface HTMLTaFormLabelElement extends Components.TaFormLabel, HTMLStencilElement {
    }
    var HTMLTaFormLabelElement: {
        prototype: HTMLTaFormLabelElement;
        new (): HTMLTaFormLabelElement;
    };
    interface HTMLTaIconElement extends Components.TaIcon, HTMLStencilElement {
    }
    var HTMLTaIconElement: {
        prototype: HTMLTaIconElement;
        new (): HTMLTaIconElement;
    };
    interface HTMLTaInputElement extends Components.TaInput, HTMLStencilElement {
    }
    var HTMLTaInputElement: {
        prototype: HTMLTaInputElement;
        new (): HTMLTaInputElement;
    };
    interface HTMLTaLineGraphElement extends Components.TaLineGraph, HTMLStencilElement {
    }
    var HTMLTaLineGraphElement: {
        prototype: HTMLTaLineGraphElement;
        new (): HTMLTaLineGraphElement;
    };
    interface HTMLTaLoaderElement extends Components.TaLoader, HTMLStencilElement {
    }
    var HTMLTaLoaderElement: {
        prototype: HTMLTaLoaderElement;
        new (): HTMLTaLoaderElement;
    };
    interface HTMLTaModalElement extends Components.TaModal, HTMLStencilElement {
    }
    var HTMLTaModalElement: {
        prototype: HTMLTaModalElement;
        new (): HTMLTaModalElement;
    };
    interface HTMLTaMultiSelectElement extends Components.TaMultiSelect, HTMLStencilElement {
    }
    var HTMLTaMultiSelectElement: {
        prototype: HTMLTaMultiSelectElement;
        new (): HTMLTaMultiSelectElement;
    };
    interface HTMLTaNavDrawerElement extends Components.TaNavDrawer, HTMLStencilElement {
    }
    var HTMLTaNavDrawerElement: {
        prototype: HTMLTaNavDrawerElement;
        new (): HTMLTaNavDrawerElement;
    };
    interface HTMLTaPageHeaderElement extends Components.TaPageHeader, HTMLStencilElement {
    }
    var HTMLTaPageHeaderElement: {
        prototype: HTMLTaPageHeaderElement;
        new (): HTMLTaPageHeaderElement;
    };
    interface HTMLTaProgressElement extends Components.TaProgress, HTMLStencilElement {
    }
    var HTMLTaProgressElement: {
        prototype: HTMLTaProgressElement;
        new (): HTMLTaProgressElement;
    };
    interface HTMLTaRecentApplicationsListElement extends Components.TaRecentApplicationsList, HTMLStencilElement {
    }
    var HTMLTaRecentApplicationsListElement: {
        prototype: HTMLTaRecentApplicationsListElement;
        new (): HTMLTaRecentApplicationsListElement;
    };
    interface HTMLTaSelectElement extends Components.TaSelect, HTMLStencilElement {
    }
    var HTMLTaSelectElement: {
        prototype: HTMLTaSelectElement;
        new (): HTMLTaSelectElement;
    };
    interface HTMLTaSelectOptionElement extends Components.TaSelectOption, HTMLStencilElement {
    }
    var HTMLTaSelectOptionElement: {
        prototype: HTMLTaSelectOptionElement;
        new (): HTMLTaSelectOptionElement;
    };
    interface HTMLTaSidebarElement extends Components.TaSidebar, HTMLStencilElement {
    }
    var HTMLTaSidebarElement: {
        prototype: HTMLTaSidebarElement;
        new (): HTMLTaSidebarElement;
    };
    interface HTMLTaSidebarItemElement extends Components.TaSidebarItem, HTMLStencilElement {
    }
    var HTMLTaSidebarItemElement: {
        prototype: HTMLTaSidebarItemElement;
        new (): HTMLTaSidebarItemElement;
    };
    interface HTMLTaStatCardElement extends Components.TaStatCard, HTMLStencilElement {
    }
    var HTMLTaStatCardElement: {
        prototype: HTMLTaStatCardElement;
        new (): HTMLTaStatCardElement;
    };
    interface HTMLTaSwitchButtonElement extends Components.TaSwitchButton, HTMLStencilElement {
    }
    var HTMLTaSwitchButtonElement: {
        prototype: HTMLTaSwitchButtonElement;
        new (): HTMLTaSwitchButtonElement;
    };
    interface HTMLTaTabBodyElement extends Components.TaTabBody, HTMLStencilElement {
    }
    var HTMLTaTabBodyElement: {
        prototype: HTMLTaTabBodyElement;
        new (): HTMLTaTabBodyElement;
    };
    interface HTMLTaTabHeaderElement extends Components.TaTabHeader, HTMLStencilElement {
    }
    var HTMLTaTabHeaderElement: {
        prototype: HTMLTaTabHeaderElement;
        new (): HTMLTaTabHeaderElement;
    };
    interface HTMLTaTabHeaderBarElement extends Components.TaTabHeaderBar, HTMLStencilElement {
    }
    var HTMLTaTabHeaderBarElement: {
        prototype: HTMLTaTabHeaderBarElement;
        new (): HTMLTaTabHeaderBarElement;
    };
    interface HTMLTaTabsElement extends Components.TaTabs, HTMLStencilElement {
    }
    var HTMLTaTabsElement: {
        prototype: HTMLTaTabsElement;
        new (): HTMLTaTabsElement;
    };
    interface HTMLTaTextareaElement extends Components.TaTextarea, HTMLStencilElement {
    }
    var HTMLTaTextareaElement: {
        prototype: HTMLTaTextareaElement;
        new (): HTMLTaTextareaElement;
    };
    interface HTMLTaTooltipElement extends Components.TaTooltip, HTMLStencilElement {
    }
    var HTMLTaTooltipElement: {
        prototype: HTMLTaTooltipElement;
        new (): HTMLTaTooltipElement;
    };
    interface HTMLTaTopbarElement extends Components.TaTopbar, HTMLStencilElement {
    }
    var HTMLTaTopbarElement: {
        prototype: HTMLTaTopbarElement;
        new (): HTMLTaTopbarElement;
    };
    interface HTMLTaUserCardElement extends Components.TaUserCard, HTMLStencilElement {
    }
    var HTMLTaUserCardElement: {
        prototype: HTMLTaUserCardElement;
        new (): HTMLTaUserCardElement;
    };
    interface HTMLTaUserListCardElement extends Components.TaUserListCard, HTMLStencilElement {
    }
    var HTMLTaUserListCardElement: {
        prototype: HTMLTaUserListCardElement;
        new (): HTMLTaUserListCardElement;
    };
    interface HTMLUsersViewElement extends Components.UsersView, HTMLStencilElement {
    }
    var HTMLUsersViewElement: {
        prototype: HTMLUsersViewElement;
        new (): HTMLUsersViewElement;
    };
    interface HTMLElementTagNameMap {
        "app-root": HTMLAppRootElement;
        "application-details-sidebar": HTMLApplicationDetailsSidebarElement;
        "application-details-view": HTMLApplicationDetailsViewElement;
        "applications-view": HTMLApplicationsViewElement;
        "auth-view": HTMLAuthViewElement;
        "billing-setting-view": HTMLBillingSettingViewElement;
        "create-application-view": HTMLCreateApplicationViewElement;
        "create-user-view": HTMLCreateUserViewElement;
        "custom-storage-engine-input": HTMLCustomStorageEngineInputElement;
        "dashboard-view": HTMLDashboardViewElement;
        "edit-application-view": HTMLEditApplicationViewElement;
        "edit-user-view": HTMLEditUserViewElement;
        "forgot-password-view": HTMLForgotPasswordViewElement;
        "login-tab": HTMLLoginTabElement;
        "onboarding-congratulations-view": HTMLOnboardingCongratulationsViewElement;
        "onboarding-container": HTMLOnboardingContainerElement;
        "onboarding-custom-storage-view": HTMLOnboardingCustomStorageViewElement;
        "onboarding-left-side": HTMLOnboardingLeftSideElement;
        "onboarding-right-side": HTMLOnboardingRightSideElement;
        "onboarding-select-storage-view": HTMLOnboardingSelectStorageViewElement;
        "personal-setting-view": HTMLPersonalSettingViewElement;
        "register-tab": HTMLRegisterTabElement;
        "reset-password-view": HTMLResetPasswordViewElement;
        "settings-view": HTMLSettingsViewElement;
        "space-setting-view": HTMLSpaceSettingViewElement;
        "ta-app-layout": HTMLTaAppLayoutElement;
        "ta-app-page": HTMLTaAppPageElement;
        "ta-application-card": HTMLTaApplicationCardElement;
        "ta-application-list-card": HTMLTaApplicationListCardElement;
        "ta-avatar": HTMLTaAvatarElement;
        "ta-avatar-list": HTMLTaAvatarListElement;
        "ta-billing-card": HTMLTaBillingCardElement;
        "ta-button": HTMLTaButtonElement;
        "ta-card": HTMLTaCardElement;
        "ta-checkbox": HTMLTaCheckboxElement;
        "ta-dragger": HTMLTaDraggerElement;
        "ta-dragger-preview-file": HTMLTaDraggerPreviewFileElement;
        "ta-drawer": HTMLTaDrawerElement;
        "ta-drawers": HTMLTaDrawersElement;
        "ta-dropdown": HTMLTaDropdownElement;
        "ta-error": HTMLTaErrorElement;
        "ta-file-card": HTMLTaFileCardElement;
        "ta-form": HTMLTaFormElement;
        "ta-form-label": HTMLTaFormLabelElement;
        "ta-icon": HTMLTaIconElement;
        "ta-input": HTMLTaInputElement;
        "ta-line-graph": HTMLTaLineGraphElement;
        "ta-loader": HTMLTaLoaderElement;
        "ta-modal": HTMLTaModalElement;
        "ta-multi-select": HTMLTaMultiSelectElement;
        "ta-nav-drawer": HTMLTaNavDrawerElement;
        "ta-page-header": HTMLTaPageHeaderElement;
        "ta-progress": HTMLTaProgressElement;
        "ta-recent-applications-list": HTMLTaRecentApplicationsListElement;
        "ta-select": HTMLTaSelectElement;
        "ta-select-option": HTMLTaSelectOptionElement;
        "ta-sidebar": HTMLTaSidebarElement;
        "ta-sidebar-item": HTMLTaSidebarItemElement;
        "ta-stat-card": HTMLTaStatCardElement;
        "ta-switch-button": HTMLTaSwitchButtonElement;
        "ta-tab-body": HTMLTaTabBodyElement;
        "ta-tab-header": HTMLTaTabHeaderElement;
        "ta-tab-header-bar": HTMLTaTabHeaderBarElement;
        "ta-tabs": HTMLTaTabsElement;
        "ta-textarea": HTMLTaTextareaElement;
        "ta-tooltip": HTMLTaTooltipElement;
        "ta-topbar": HTMLTaTopbarElement;
        "ta-user-card": HTMLTaUserCardElement;
        "ta-user-list-card": HTMLTaUserListCardElement;
        "users-view": HTMLUsersViewElement;
    }
}
declare namespace LocalJSX {
    interface AppRoot {
    }
    interface ApplicationDetailsSidebar {
        "application": ApplicationModel;
    }
    interface ApplicationDetailsView {
        "history"?: RouterHistory;
        "match"?: MatchResults;
    }
    interface ApplicationsView {
        "history"?: RouterHistory;
    }
    interface AuthView {
        "history"?: RouterHistory;
    }
    interface BillingSettingView {
    }
    interface CreateApplicationView {
        "history"?: RouterHistory;
    }
    interface CreateUserView {
        "history"?: RouterHistory;
        "onTaUserWasCreated"?: (event: CustomEvent<any>) => void;
    }
    interface CustomStorageEngineInput {
        "exceptions"?: StorageEngineType[];
        "onTaSelect"?: (event: CustomEvent<any>) => void;
        "value": StorageEngineType;
    }
    interface DashboardView {
    }
    interface EditApplicationView {
        "history"?: RouterHistory;
        "onTaApplicationWasUpdated"?: (event: CustomEvent<any>) => void;
    }
    interface EditUserView {
        "history"?: RouterHistory;
        "onTaUserWasUpdated"?: (event: CustomEvent<any>) => void;
    }
    interface ForgotPasswordView {
    }
    interface LoginTab {
        "history"?: RouterHistory;
    }
    interface OnboardingCongratulationsView {
        "history"?: RouterHistory;
    }
    interface OnboardingContainer {
    }
    interface OnboardingCustomStorageView {
        "history"?: RouterHistory;
    }
    interface OnboardingLeftSide {
        "lastStep"?: boolean;
        "mainTitle": string;
        "subTitle": string;
    }
    interface OnboardingRightSide {
        "description"?: string;
        "mainTitle"?: string;
    }
    interface OnboardingSelectStorageView {
        "history"?: RouterHistory;
    }
    interface PersonalSettingView {
    }
    interface RegisterTab {
        "history"?: RouterHistory;
    }
    interface ResetPasswordView {
        "history"?: RouterHistory;
    }
    interface SettingsView {
        "history"?: RouterHistory;
    }
    interface SpaceSettingView {
    }
    interface TaAppLayout {
    }
    interface TaAppPage {
    }
    interface TaApplicationCard {
        "application"?: ApplicationModel;
        "create"?: boolean;
        "history"?: RouterHistory;
        "onTaApplicationWasDeleted"?: (event: CustomEvent<any>) => void;
    }
    interface TaApplicationListCard {
        "application"?: ApplicationModel;
        "create"?: boolean;
        "history"?: RouterHistory;
        "onTaApplicationWasDeleted"?: (event: CustomEvent<any>) => void;
    }
    interface TaAvatar {
        "color"?: TaAvatarColors;
        "size"?: TaAvatarSize;
        "text": string;
    }
    interface TaAvatarList {
        "items": string[];
        "size"?: TaAvatarSize;
    }
    interface TaBillingCard {
        "card"?: CardModel;
        "onTaDeleteClick"?: (event: CustomEvent<any>) => void;
        "onTaSetDefaultClick"?: (event: CustomEvent<any>) => void;
    }
    interface TaButton {
        "color"?: "white" | "grey" | "dark-grey";
        "disabled"?: boolean;
        "loading"?: boolean;
        "onTaClick"?: (event: CustomEvent<any>) => void;
        "small"?: boolean;
        "type"?: TaButtonType;
    }
    interface TaCard {
    }
    interface TaCheckbox {
        "initialChecked"?: boolean;
        "label"?: string;
        "onTaChange"?: (event: CustomEvent<any>) => void;
    }
    interface TaDragger {
        "applicationId": string;
        "onTaFileUpload"?: (event: CustomEvent<any>) => void;
    }
    interface TaDraggerPreviewFile {
        "file": PreviewFile;
    }
    interface TaDrawer {
        "open"?: boolean;
    }
    interface TaDrawers {
        "history"?: RouterHistory;
        "routeId": number;
    }
    interface TaDropdown {
        "onTaOverlayRendered"?: (event: CustomEvent<any>) => void;
        "overlay": HTMLElement;
    }
    interface TaError {
        "error"?: string;
    }
    interface TaFileCard {
        "file": FileModel;
        "onTaFileWasDeleted"?: (event: CustomEvent<any>) => void;
    }
    interface TaForm {
        "onTaSubmit"?: (event: CustomEvent<any>) => void;
    }
    interface TaFormLabel {
    }
    interface TaIcon {
        "icon": TaIconType;
        "onTaClick"?: (event: CustomEvent<any>) => void;
    }
    interface TaInput {
        "disabled"?: boolean;
        "error"?: string;
        "label"?: string;
        "loading"?: boolean;
        "onTaInput"?: (event: CustomEvent<any>) => void;
        "type"?: InputType;
        "value"?: string;
    }
    interface TaLineGraph {
        "datasets": TaLineGraphDataSet[];
        "labels": string[];
    }
    interface TaLoader {
    }
    interface TaModal {
        "bodyText"?: string;
        "cancelBtnText"?: string;
        "confirmBtnText"?: string;
        "display"?: boolean;
        "loading"?: boolean;
        "onTaClose"?: (event: CustomEvent<any>) => void;
        "onTaSubmit"?: (event: CustomEvent<any>) => void;
        "titleText"?: string;
        "useDefaultFooter"?: boolean;
    }
    interface TaMultiSelect {
        "label"?: string;
        "loading"?: boolean;
        "onTaSelect"?: (event: CustomEvent<any>) => void;
        "options"?: TaMultiSelectOption[];
        "value"?: string[];
    }
    interface TaNavDrawer {
        "open": boolean;
    }
    interface TaPageHeader {
        "pageTitle": string;
    }
    interface TaProgress {
        "size"?: number;
        "value": number;
    }
    interface TaRecentApplicationsList {
    }
    interface TaSelect {
        "error"?: string;
        "onTaSelect"?: (event: CustomEvent<any>) => void;
        "placeholder"?: string;
        "value"?: string | number;
    }
    interface TaSelectOption {
        "label": string;
        "value": string | number;
    }
    interface TaSidebar {
        "history"?: RouterHistory;
    }
    interface TaSidebarItem {
        "icon"?: TaSidebarItemIcon;
        "to"?: string;
    }
    interface TaStatCard {
        "icon": TaIconType;
        "label": string;
        "value": string;
    }
    interface TaSwitchButton {
        "initialChecked"?: boolean;
        "label"?: string;
        "noLabel"?: string;
        "onTaChange"?: (event: CustomEvent<any>) => void;
        "yesLabel"?: string;
    }
    interface TaTabBody {
        "tab": string;
    }
    interface TaTabHeader {
        "tab": string;
    }
    interface TaTabHeaderBar {
    }
    interface TaTabs {
        "initialValue"?: string;
        "onTaChange"?: (event: CustomEvent<any>) => void;
    }
    interface TaTextarea {
        "error"?: string;
        "label"?: string;
        "onTaInput"?: (event: CustomEvent<any>) => void;
        "rows"?: number;
        "value"?: string;
    }
    interface TaTooltip {
        "text"?: string;
    }
    interface TaTopbar {
        "onTaHamburgerClicked"?: (event: CustomEvent<any>) => void;
    }
    interface TaUserCard {
        "create"?: boolean;
        "history"?: RouterHistory;
        "onTaUserWasDeleted"?: (event: CustomEvent<any>) => void;
        "user"?: UserModel;
    }
    interface TaUserListCard {
        "create"?: boolean;
        "history"?: RouterHistory;
        "onTaUserWasDeleted"?: (event: CustomEvent<any>) => void;
        "user"?: UserModel;
    }
    interface UsersView {
        "history"?: RouterHistory;
    }
    interface IntrinsicElements {
        "app-root": AppRoot;
        "application-details-sidebar": ApplicationDetailsSidebar;
        "application-details-view": ApplicationDetailsView;
        "applications-view": ApplicationsView;
        "auth-view": AuthView;
        "billing-setting-view": BillingSettingView;
        "create-application-view": CreateApplicationView;
        "create-user-view": CreateUserView;
        "custom-storage-engine-input": CustomStorageEngineInput;
        "dashboard-view": DashboardView;
        "edit-application-view": EditApplicationView;
        "edit-user-view": EditUserView;
        "forgot-password-view": ForgotPasswordView;
        "login-tab": LoginTab;
        "onboarding-congratulations-view": OnboardingCongratulationsView;
        "onboarding-container": OnboardingContainer;
        "onboarding-custom-storage-view": OnboardingCustomStorageView;
        "onboarding-left-side": OnboardingLeftSide;
        "onboarding-right-side": OnboardingRightSide;
        "onboarding-select-storage-view": OnboardingSelectStorageView;
        "personal-setting-view": PersonalSettingView;
        "register-tab": RegisterTab;
        "reset-password-view": ResetPasswordView;
        "settings-view": SettingsView;
        "space-setting-view": SpaceSettingView;
        "ta-app-layout": TaAppLayout;
        "ta-app-page": TaAppPage;
        "ta-application-card": TaApplicationCard;
        "ta-application-list-card": TaApplicationListCard;
        "ta-avatar": TaAvatar;
        "ta-avatar-list": TaAvatarList;
        "ta-billing-card": TaBillingCard;
        "ta-button": TaButton;
        "ta-card": TaCard;
        "ta-checkbox": TaCheckbox;
        "ta-dragger": TaDragger;
        "ta-dragger-preview-file": TaDraggerPreviewFile;
        "ta-drawer": TaDrawer;
        "ta-drawers": TaDrawers;
        "ta-dropdown": TaDropdown;
        "ta-error": TaError;
        "ta-file-card": TaFileCard;
        "ta-form": TaForm;
        "ta-form-label": TaFormLabel;
        "ta-icon": TaIcon;
        "ta-input": TaInput;
        "ta-line-graph": TaLineGraph;
        "ta-loader": TaLoader;
        "ta-modal": TaModal;
        "ta-multi-select": TaMultiSelect;
        "ta-nav-drawer": TaNavDrawer;
        "ta-page-header": TaPageHeader;
        "ta-progress": TaProgress;
        "ta-recent-applications-list": TaRecentApplicationsList;
        "ta-select": TaSelect;
        "ta-select-option": TaSelectOption;
        "ta-sidebar": TaSidebar;
        "ta-sidebar-item": TaSidebarItem;
        "ta-stat-card": TaStatCard;
        "ta-switch-button": TaSwitchButton;
        "ta-tab-body": TaTabBody;
        "ta-tab-header": TaTabHeader;
        "ta-tab-header-bar": TaTabHeaderBar;
        "ta-tabs": TaTabs;
        "ta-textarea": TaTextarea;
        "ta-tooltip": TaTooltip;
        "ta-topbar": TaTopbar;
        "ta-user-card": TaUserCard;
        "ta-user-list-card": TaUserListCard;
        "users-view": UsersView;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "application-details-sidebar": LocalJSX.ApplicationDetailsSidebar & JSXBase.HTMLAttributes<HTMLApplicationDetailsSidebarElement>;
            "application-details-view": LocalJSX.ApplicationDetailsView & JSXBase.HTMLAttributes<HTMLApplicationDetailsViewElement>;
            "applications-view": LocalJSX.ApplicationsView & JSXBase.HTMLAttributes<HTMLApplicationsViewElement>;
            "auth-view": LocalJSX.AuthView & JSXBase.HTMLAttributes<HTMLAuthViewElement>;
            "billing-setting-view": LocalJSX.BillingSettingView & JSXBase.HTMLAttributes<HTMLBillingSettingViewElement>;
            "create-application-view": LocalJSX.CreateApplicationView & JSXBase.HTMLAttributes<HTMLCreateApplicationViewElement>;
            "create-user-view": LocalJSX.CreateUserView & JSXBase.HTMLAttributes<HTMLCreateUserViewElement>;
            "custom-storage-engine-input": LocalJSX.CustomStorageEngineInput & JSXBase.HTMLAttributes<HTMLCustomStorageEngineInputElement>;
            "dashboard-view": LocalJSX.DashboardView & JSXBase.HTMLAttributes<HTMLDashboardViewElement>;
            "edit-application-view": LocalJSX.EditApplicationView & JSXBase.HTMLAttributes<HTMLEditApplicationViewElement>;
            "edit-user-view": LocalJSX.EditUserView & JSXBase.HTMLAttributes<HTMLEditUserViewElement>;
            "forgot-password-view": LocalJSX.ForgotPasswordView & JSXBase.HTMLAttributes<HTMLForgotPasswordViewElement>;
            "login-tab": LocalJSX.LoginTab & JSXBase.HTMLAttributes<HTMLLoginTabElement>;
            "onboarding-congratulations-view": LocalJSX.OnboardingCongratulationsView & JSXBase.HTMLAttributes<HTMLOnboardingCongratulationsViewElement>;
            "onboarding-container": LocalJSX.OnboardingContainer & JSXBase.HTMLAttributes<HTMLOnboardingContainerElement>;
            "onboarding-custom-storage-view": LocalJSX.OnboardingCustomStorageView & JSXBase.HTMLAttributes<HTMLOnboardingCustomStorageViewElement>;
            "onboarding-left-side": LocalJSX.OnboardingLeftSide & JSXBase.HTMLAttributes<HTMLOnboardingLeftSideElement>;
            "onboarding-right-side": LocalJSX.OnboardingRightSide & JSXBase.HTMLAttributes<HTMLOnboardingRightSideElement>;
            "onboarding-select-storage-view": LocalJSX.OnboardingSelectStorageView & JSXBase.HTMLAttributes<HTMLOnboardingSelectStorageViewElement>;
            "personal-setting-view": LocalJSX.PersonalSettingView & JSXBase.HTMLAttributes<HTMLPersonalSettingViewElement>;
            "register-tab": LocalJSX.RegisterTab & JSXBase.HTMLAttributes<HTMLRegisterTabElement>;
            "reset-password-view": LocalJSX.ResetPasswordView & JSXBase.HTMLAttributes<HTMLResetPasswordViewElement>;
            "settings-view": LocalJSX.SettingsView & JSXBase.HTMLAttributes<HTMLSettingsViewElement>;
            "space-setting-view": LocalJSX.SpaceSettingView & JSXBase.HTMLAttributes<HTMLSpaceSettingViewElement>;
            "ta-app-layout": LocalJSX.TaAppLayout & JSXBase.HTMLAttributes<HTMLTaAppLayoutElement>;
            "ta-app-page": LocalJSX.TaAppPage & JSXBase.HTMLAttributes<HTMLTaAppPageElement>;
            "ta-application-card": LocalJSX.TaApplicationCard & JSXBase.HTMLAttributes<HTMLTaApplicationCardElement>;
            "ta-application-list-card": LocalJSX.TaApplicationListCard & JSXBase.HTMLAttributes<HTMLTaApplicationListCardElement>;
            "ta-avatar": LocalJSX.TaAvatar & JSXBase.HTMLAttributes<HTMLTaAvatarElement>;
            "ta-avatar-list": LocalJSX.TaAvatarList & JSXBase.HTMLAttributes<HTMLTaAvatarListElement>;
            "ta-billing-card": LocalJSX.TaBillingCard & JSXBase.HTMLAttributes<HTMLTaBillingCardElement>;
            "ta-button": LocalJSX.TaButton & JSXBase.HTMLAttributes<HTMLTaButtonElement>;
            "ta-card": LocalJSX.TaCard & JSXBase.HTMLAttributes<HTMLTaCardElement>;
            "ta-checkbox": LocalJSX.TaCheckbox & JSXBase.HTMLAttributes<HTMLTaCheckboxElement>;
            "ta-dragger": LocalJSX.TaDragger & JSXBase.HTMLAttributes<HTMLTaDraggerElement>;
            "ta-dragger-preview-file": LocalJSX.TaDraggerPreviewFile & JSXBase.HTMLAttributes<HTMLTaDraggerPreviewFileElement>;
            "ta-drawer": LocalJSX.TaDrawer & JSXBase.HTMLAttributes<HTMLTaDrawerElement>;
            "ta-drawers": LocalJSX.TaDrawers & JSXBase.HTMLAttributes<HTMLTaDrawersElement>;
            "ta-dropdown": LocalJSX.TaDropdown & JSXBase.HTMLAttributes<HTMLTaDropdownElement>;
            "ta-error": LocalJSX.TaError & JSXBase.HTMLAttributes<HTMLTaErrorElement>;
            "ta-file-card": LocalJSX.TaFileCard & JSXBase.HTMLAttributes<HTMLTaFileCardElement>;
            "ta-form": LocalJSX.TaForm & JSXBase.HTMLAttributes<HTMLTaFormElement>;
            "ta-form-label": LocalJSX.TaFormLabel & JSXBase.HTMLAttributes<HTMLTaFormLabelElement>;
            "ta-icon": LocalJSX.TaIcon & JSXBase.HTMLAttributes<HTMLTaIconElement>;
            "ta-input": LocalJSX.TaInput & JSXBase.HTMLAttributes<HTMLTaInputElement>;
            "ta-line-graph": LocalJSX.TaLineGraph & JSXBase.HTMLAttributes<HTMLTaLineGraphElement>;
            "ta-loader": LocalJSX.TaLoader & JSXBase.HTMLAttributes<HTMLTaLoaderElement>;
            "ta-modal": LocalJSX.TaModal & JSXBase.HTMLAttributes<HTMLTaModalElement>;
            "ta-multi-select": LocalJSX.TaMultiSelect & JSXBase.HTMLAttributes<HTMLTaMultiSelectElement>;
            "ta-nav-drawer": LocalJSX.TaNavDrawer & JSXBase.HTMLAttributes<HTMLTaNavDrawerElement>;
            "ta-page-header": LocalJSX.TaPageHeader & JSXBase.HTMLAttributes<HTMLTaPageHeaderElement>;
            "ta-progress": LocalJSX.TaProgress & JSXBase.HTMLAttributes<HTMLTaProgressElement>;
            "ta-recent-applications-list": LocalJSX.TaRecentApplicationsList & JSXBase.HTMLAttributes<HTMLTaRecentApplicationsListElement>;
            "ta-select": LocalJSX.TaSelect & JSXBase.HTMLAttributes<HTMLTaSelectElement>;
            "ta-select-option": LocalJSX.TaSelectOption & JSXBase.HTMLAttributes<HTMLTaSelectOptionElement>;
            "ta-sidebar": LocalJSX.TaSidebar & JSXBase.HTMLAttributes<HTMLTaSidebarElement>;
            "ta-sidebar-item": LocalJSX.TaSidebarItem & JSXBase.HTMLAttributes<HTMLTaSidebarItemElement>;
            "ta-stat-card": LocalJSX.TaStatCard & JSXBase.HTMLAttributes<HTMLTaStatCardElement>;
            "ta-switch-button": LocalJSX.TaSwitchButton & JSXBase.HTMLAttributes<HTMLTaSwitchButtonElement>;
            "ta-tab-body": LocalJSX.TaTabBody & JSXBase.HTMLAttributes<HTMLTaTabBodyElement>;
            "ta-tab-header": LocalJSX.TaTabHeader & JSXBase.HTMLAttributes<HTMLTaTabHeaderElement>;
            "ta-tab-header-bar": LocalJSX.TaTabHeaderBar & JSXBase.HTMLAttributes<HTMLTaTabHeaderBarElement>;
            "ta-tabs": LocalJSX.TaTabs & JSXBase.HTMLAttributes<HTMLTaTabsElement>;
            "ta-textarea": LocalJSX.TaTextarea & JSXBase.HTMLAttributes<HTMLTaTextareaElement>;
            "ta-tooltip": LocalJSX.TaTooltip & JSXBase.HTMLAttributes<HTMLTaTooltipElement>;
            "ta-topbar": LocalJSX.TaTopbar & JSXBase.HTMLAttributes<HTMLTaTopbarElement>;
            "ta-user-card": LocalJSX.TaUserCard & JSXBase.HTMLAttributes<HTMLTaUserCardElement>;
            "ta-user-list-card": LocalJSX.TaUserListCard & JSXBase.HTMLAttributes<HTMLTaUserListCardElement>;
            "users-view": LocalJSX.UsersView & JSXBase.HTMLAttributes<HTMLUsersViewElement>;
        }
    }
}
